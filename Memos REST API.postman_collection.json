{
	"info": {
		"_postman_id": "425a5b4b-8385-4ffd-b615-0a4132f318ff",
		"name": "Memos REST API",
		"description": "A privacy-first, lightweight note-taking service.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32009249"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "auth",
					"item": [
						{
							"name": "Login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"remember\": \"<boolean>\",\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"signin"
									]
								}
							},
							"response": [
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"remember\": \"<boolean>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"ARCHIVED\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "Malformatted signin request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"remember\": \"<boolean>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Password login is deactivated | Incorrect login credentials, please try again",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"remember\": \"<boolean>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User has been archived with username %s",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"remember\": \"<boolean>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find system setting | Failed to unmarshal system setting | Incorrect login credentials, please try again | Failed to generate tokens | Failed to create activity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"remember\": \"<boolean>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "SSO",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"<string>\",\n  \"identityProviderId\": \"<integer>\",\n  \"redirectUri\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/signin/sso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"signin",
										"sso"
									]
								}
							},
							"response": [
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"identityProviderId\": \"<integer>\",\n  \"redirectUri\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin",
												"sso"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "Malformatted signin request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"identityProviderId\": \"<integer>\",\n  \"redirectUri\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin",
												"sso"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access denied, identifier does not match the filter.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"identityProviderId\": \"<integer>\",\n  \"redirectUri\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin",
												"sso"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User has been archived with username {username}",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"identityProviderId\": \"<integer>\",\n  \"redirectUri\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin",
												"sso"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity provider not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"identityProviderId\": \"<integer>\",\n  \"redirectUri\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin",
												"sso"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find identity provider | Failed to create identity provider instance | Failed to exchange token | Failed to get user info | Failed to compile identifier filter | Incorrect login credentials, please try again | Failed to generate random password ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"<string>\",\n  \"identityProviderId\": \"<integer>\",\n  \"redirectUri\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signin/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signin",
												"sso"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Signout",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/signout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"signout"
									]
								}
							},
							"response": [
								{
									"name": "Sign-out success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								}
							]
						},
						{
							"name": "Signup",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"signup"
									]
								}
							},
							"response": [
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "Malformatted signup request | Failed to find users",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signup"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "signup is disabled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signup"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signup"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signup"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find system setting | Failed to unmarshal system setting allow signup | Failed to generate password hash | Failed to create user | Failed to generate tokens | Failed to create activity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/signup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"signup"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "identity provider",
					"item": [
						{
							"name": "IDP",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/idp/:idpId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"idp",
										":idpId"
									],
									"variable": [
										{
											"key": "idpId",
											"value": "<integer>",
											"description": "(Required) Identity Provider ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Identity Provider deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "ID is not a number: %s | Malformatted patch identity provider request",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to patch identity provider",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "IDP (Get All)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/idp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"idp"
									]
								},
								"description": "*clientSecret is only available for host user"
							},
							"response": [
								{
									"name": "List of available identity providers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"config\": {\n      \"oauth2Config\": {\n        \"authUrl\": \"<string>\",\n        \"clientId\": \"<string>\",\n        \"clientSecret\": \"<string>\",\n        \"fieldMapping\": {\n          \"displayName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"identifier\": \"<string>\"\n        },\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"tokenUrl\": \"<string>\",\n        \"userInfoUrl\": \"<string>\"\n      }\n    },\n    \"id\": \"<integer>\",\n    \"identifierFilter\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"OAUTH2\"\n  },\n  {\n    \"config\": {\n      \"oauth2Config\": {\n        \"authUrl\": \"<string>\",\n        \"clientId\": \"<string>\",\n        \"clientSecret\": \"<string>\",\n        \"fieldMapping\": {\n          \"displayName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"identifier\": \"<string>\"\n        },\n        \"scopes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"tokenUrl\": \"<string>\",\n        \"userInfoUrl\": \"<string>\"\n      }\n    },\n    \"id\": \"<integer>\",\n    \"identifierFilter\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"OAUTH2\"\n  }\n]"
								},
								{
									"name": "Failed to find identity provider list | Failed to find user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "IDP",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/idp/:idpId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"idp",
										":idpId"
									],
									"variable": [
										{
											"key": "idpId",
											"value": "<integer>",
											"description": "(Required) Identity provider ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested identity provider",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"id\": \"<integer>\",\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}"
								},
								{
									"name": "ID is not a number: %s",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity provider not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find identity provider list | Failed to find user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "IDP (Create)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/idp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"idp"
									]
								}
							},
							"response": [
								{
									"name": "Identity provider information",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"id\": \"<integer>\",\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}"
								},
								{
									"name": "Malformatted post identity provider request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to create identity provider",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "IDP (Update)",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/idp/:idpId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"idp",
										":idpId"
									],
									"variable": [
										{
											"key": "idpId",
											"value": "<integer>",
											"description": "(Required) Identity Provider ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Patched identity provider",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"id\": \"<integer>\",\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}"
								},
								{
									"name": "ID is not a number: %s | Malformatted patch identity provider request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to patch identity provider",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"oauth2Config\": {\n      \"authUrl\": \"<string>\",\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"fieldMapping\": {\n        \"displayName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"identifier\": \"<string>\"\n      },\n      \"scopes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tokenUrl\": \"<string>\",\n      \"userInfoUrl\": \"<string>\"\n    }\n  },\n  \"identifierFilter\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"OAUTH2\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/idp/:idpId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"idp",
												":idpId"
											],
											"variable": [
												{
													"key": "idpId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "memo",
					"item": [
						{
							"name": "Memo (By Filter)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo?creatorId=<integer>&creatorUsername=<string>&rowStatus=ARCHIVED&pinned=<boolean>&tag=<string>&content=<string>&limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo"
									],
									"query": [
										{
											"key": "creatorId",
											"value": "<integer>",
											"description": "Creator ID"
										},
										{
											"key": "creatorUsername",
											"value": "<string>",
											"description": "Creator username"
										},
										{
											"key": "rowStatus",
											"value": "ARCHIVED",
											"description": "Row status"
										},
										{
											"key": "pinned",
											"value": "<boolean>",
											"description": "Pinned"
										},
										{
											"key": "tag",
											"value": "<string>",
											"description": "Search for tag. Do not append #"
										},
										{
											"key": "content",
											"value": "<string>",
											"description": "Search for content"
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset"
										}
									]
								}
							},
							"response": [
								{
									"name": "Memo list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo?creatorId=<integer>&creatorUsername=<string>&rowStatus=ARCHIVED&pinned=<boolean>&tag=<string>&content=<string>&limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											],
											"query": [
												{
													"key": "creatorId",
													"value": "<integer>",
													"description": "Creator ID"
												},
												{
													"key": "creatorUsername",
													"value": "<string>",
													"description": "Creator username"
												},
												{
													"key": "rowStatus",
													"value": "ARCHIVED",
													"description": "Row status"
												},
												{
													"key": "pinned",
													"value": "<boolean>",
													"description": "Pinned"
												},
												{
													"key": "tag",
													"value": "<string>",
													"description": "Search for tag. Do not append #"
												},
												{
													"key": "content",
													"value": "<string>",
													"description": "Search for content"
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"content\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"pinned\": \"<boolean>\",\n    \"rowStatus\": \"NORMAL\",\n    \"updatedTs\": \"<integer>\",\n    \"visibility\": \"PROTECTED\"\n  },\n  {\n    \"content\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"pinned\": \"<boolean>\",\n    \"rowStatus\": \"ARCHIVED\",\n    \"updatedTs\": \"<integer>\",\n    \"visibility\": \"PROTECTED\"\n  }\n]"
								},
								{
									"name": "Missing user to find memo",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo?creatorId=<integer>&creatorUsername=<string>&rowStatus=ARCHIVED&pinned=<boolean>&tag=<string>&content=<string>&limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											],
											"query": [
												{
													"key": "creatorId",
													"value": "<integer>",
													"description": "Creator ID"
												},
												{
													"key": "creatorUsername",
													"value": "<string>",
													"description": "Creator username"
												},
												{
													"key": "rowStatus",
													"value": "ARCHIVED",
													"description": "Row status"
												},
												{
													"key": "pinned",
													"value": "<boolean>",
													"description": "Pinned"
												},
												{
													"key": "tag",
													"value": "<string>",
													"description": "Search for tag. Do not append #"
												},
												{
													"key": "content",
													"value": "<string>",
													"description": "Search for content"
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to get memo display with updated ts setting value | Failed to fetch memo list | Failed to compose memo response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo?creatorId=<integer>&creatorUsername=<string>&rowStatus=ARCHIVED&pinned=<boolean>&tag=<string>&content=<string>&limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											],
											"query": [
												{
													"key": "creatorId",
													"value": "<integer>",
													"description": "Creator ID"
												},
												{
													"key": "creatorUsername",
													"value": "<string>",
													"description": "Creator username"
												},
												{
													"key": "rowStatus",
													"value": "ARCHIVED",
													"description": "Row status"
												},
												{
													"key": "pinned",
													"value": "<boolean>",
													"description": "Pinned"
												},
												{
													"key": "tag",
													"value": "<string>",
													"description": "Search for tag. Do not append #"
												},
												{
													"key": "content",
													"value": "<string>",
													"description": "Search for content"
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Memo (Create)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visibility\": \"PUBLIC\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo"
									]
								},
								"description": "Visibility can be PUBLIC, PROTECTED or PRIVATE\n*You should omit fields to use their default values"
							},
							"response": [
								{
									"name": "Stored memo",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visibility\": \"PUBLIC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"creatorID\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"pinned\": \"<boolean>\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PUBLIC\"\n}"
								},
								{
									"name": "Malformatted post memo request | Content size overflow, up to 1MB",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visibility\": \"PUBLIC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visibility\": \"PUBLIC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found | Memo not found: %d",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visibility\": \"PUBLIC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user setting | Failed to unmarshal user setting value | Failed to find system setting | Failed to unmarshal system setting | Failed to find user | Failed to create memo | Failed to create activity | Failed to upsert memo resource | Failed t",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"visibility\": \"PUBLIC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "PIN Memo",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pinned\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo/:memoId/organizer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo",
										":memoId",
										"organizer"
									],
									"variable": [
										{
											"key": "memoId",
											"value": "<integer>",
											"description": "(Required) ID of memo to organize"
										}
									]
								}
							},
							"response": [
								{
									"name": "Memo information",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pinned\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/organizer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"organizer"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"creatorID\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"pinned\": \"<boolean>\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PUBLIC\"\n}"
								},
								{
									"name": "ID is not a number: %s | Malformatted post memo organizer request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pinned\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/organizer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"organizer"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pinned\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/organizer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"organizer"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Memo not found: %v",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pinned\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/organizer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"organizer"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find memo | Failed to upsert memo organizer | Failed to find memo by ID: %v | Failed to compose memo response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pinned\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/organizer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"organizer"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Memo Relation (Delete)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo/:memoId/relation/:relatedMemoId/type/:relationType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo",
										":memoId",
										"relation",
										":relatedMemoId",
										"type",
										":relationType"
									],
									"variable": [
										{
											"key": "memoId",
											"value": "<integer>",
											"description": "(Required) ID of memo to find relations"
										},
										{
											"key": "relatedMemoId",
											"value": "<integer>",
											"description": "(Required) ID of memo to remove relation to"
										},
										{
											"key": "relationType",
											"value": "REFERENCE",
											"description": "(Required) Type of relation to remove"
										}
									]
								},
								"description": "Removes a relation between two memos"
							},
							"response": [
								{
									"name": "Memo relation deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/relation/:relatedMemoId/type/:relationType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"relation",
												":relatedMemoId",
												"type",
												":relationType"
											],
											"variable": [
												{
													"key": "memoId"
												},
												{
													"key": "relatedMemoId"
												},
												{
													"key": "relationType"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "Memo ID is not a number: %s | Related memo ID is not a number: %s",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/relation/:relatedMemoId/type/:relationType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"relation",
												":relatedMemoId",
												"type",
												":relationType"
											],
											"variable": [
												{
													"key": "memoId"
												},
												{
													"key": "relatedMemoId"
												},
												{
													"key": "relationType"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to delete memo relation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId/relation/:relatedMemoId/type/:relationType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId",
												"relation",
												":relatedMemoId",
												"type",
												":relationType"
											],
											"variable": [
												{
													"key": "memoId"
												},
												{
													"key": "relatedMemoId"
												},
												{
													"key": "relationType"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Memo (Delete)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo/:memoId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo",
										":memoId"
									],
									"variable": [
										{
											"key": "memoId",
											"value": "<integer>",
											"description": "(Required) Memo ID to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "Memo deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "ID is not a number: %s",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Memo not found: %d",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find memo | Failed to delete memo ID: %v",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Memo (Get)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo/:memoId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo",
										":memoId"
									],
									"variable": [
										{
											"key": "memoId",
											"value": "<integer>",
											"description": "(Required) Memo ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Memo list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"content\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"pinned\": \"<boolean>\",\n    \"rowStatus\": \"NORMAL\",\n    \"updatedTs\": \"<integer>\",\n    \"visibility\": \"PROTECTED\"\n  },\n  {\n    \"content\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"pinned\": \"<boolean>\",\n    \"rowStatus\": \"ARCHIVED\",\n    \"updatedTs\": \"<integer>\",\n    \"visibility\": \"PROTECTED\"\n  }\n]"
								},
								{
									"name": "ID is not a number: %s",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "this memo is private only | this memo is protected, missing user in session",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Memo not found: %d",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find memo by ID: %v | Failed to compose memo response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Memo (Update)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PROTECTED\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo/:memoId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo",
										":memoId"
									],
									"variable": [
										{
											"key": "memoId",
											"value": "<integer>",
											"description": "(Required) ID of memo to update"
										}
									]
								},
								"description": "Visibility can be PUBLIC, PROTECTED or PRIVATE\n*You should omit fields to use their default values"
							},
							"response": [
								{
									"name": "Stored memo",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PROTECTED\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"creatorID\": \"<integer>\",\n  \"id\": \"<integer>\",\n  \"pinned\": \"<boolean>\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PUBLIC\"\n}"
								},
								{
									"name": "ID is not a number: %s | Malformatted patch memo request | Content size overflow, up to 1MB",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PROTECTED\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PROTECTED\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Memo not found: %d",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PROTECTED\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find memo | Failed to patch memo | Failed to upsert memo resource | Failed to delete memo resource | Failed to compose memo response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"relationList\": [\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"REFERENCE\"\n    },\n    {\n      \"relatedMemoId\": \"<integer>\",\n      \"type\": \"COMMENT\"\n    }\n  ],\n  \"resourceIdList\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"visibility\": \"PROTECTED\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/:memoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												":memoId"
											],
											"variable": [
												{
													"key": "memoId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Memo (Get All)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo/all?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo",
										"all"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset"
										}
									]
								},
								"description": "This should also list protected memos if the user is logged in\nAuthentication is optional"
							},
							"response": [
								{
									"name": "Memo list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/all?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												"all"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"content\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"pinned\": \"<boolean>\",\n    \"rowStatus\": \"NORMAL\",\n    \"updatedTs\": \"<integer>\",\n    \"visibility\": \"PROTECTED\"\n  },\n  {\n    \"content\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"pinned\": \"<boolean>\",\n    \"rowStatus\": \"ARCHIVED\",\n    \"updatedTs\": \"<integer>\",\n    \"visibility\": \"PROTECTED\"\n  }\n]"
								},
								{
									"name": "Failed to get memo display with updated ts setting value | Failed to fetch all memo list | Failed to compose memo response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/all?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												"all"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Memo (Get Stats)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/memo/stats?creatorId=<integer>&creatorUsername=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"memo",
										"stats"
									],
									"query": [
										{
											"key": "creatorId",
											"value": "<integer>",
											"description": "Creator ID"
										},
										{
											"key": "creatorUsername",
											"value": "<string>",
											"description": "Creator username"
										}
									]
								},
								"description": "Used to generate the heatmap"
							},
							"response": [
								{
									"name": "Memo createdTs list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/stats?creatorId=<integer>&creatorUsername=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												"stats"
											],
											"query": [
												{
													"key": "creatorId",
													"value": "<integer>",
													"description": "Creator ID"
												},
												{
													"key": "creatorUsername",
													"value": "<string>",
													"description": "Creator username"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<integer>\",\n  \"<integer>\"\n]"
								},
								{
									"name": "Missing user id to find memo",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/stats?creatorId=<integer>&creatorUsername=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												"stats"
											],
											"query": [
												{
													"key": "creatorId",
													"value": "<integer>",
													"description": "Creator ID"
												},
												{
													"key": "creatorUsername",
													"value": "<string>",
													"description": "Creator username"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to get memo display with updated ts setting value | Failed to find memo list | Failed to compose memo response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/memo/stats?creatorId=<integer>&creatorUsername=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"memo",
												"stats"
											],
											"query": [
												{
													"key": "creatorId",
													"value": "<integer>",
													"description": "Creator ID"
												},
												{
													"key": "creatorUsername",
													"value": "<string>",
													"description": "Creator username"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "ping",
					"item": [
						{
							"name": "Ping",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"ping"
									]
								}
							},
							"response": [
								{
									"name": "If succeed to ping the system",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/ping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"ping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								}
							]
						}
					]
				},
				{
					"name": "resource",
					"item": [
						{
							"name": "Resource (Get by ID)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/resource?limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"resource"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>",
											"description": "Limit"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset"
										}
									]
								}
							},
							"response": [
								{
									"name": "Resource list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"blob\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"externalLink\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"internalPath\": \"<string>\",\n    \"memoID\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"updatedTs\": \"<integer>\"\n  },\n  {\n    \"blob\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"createdTs\": \"<integer>\",\n    \"creatorID\": \"<integer>\",\n    \"externalLink\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"internalPath\": \"<string>\",\n    \"memoID\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"updatedTs\": \"<integer>\"\n  }\n]"
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to fetch resource list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource?limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Limit"
												},
												{
													"key": "offset",
													"value": "<integer>",
													"description": "Offset"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Resource (Create)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/resource",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"resource"
									]
								}
							},
							"response": [
								{
									"name": "Created resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"blob\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"createdTs\": \"<integer>\",\n  \"creatorID\": \"<integer>\",\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"internalPath\": \"<string>\",\n  \"memoID\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"updatedTs\": \"<integer>\"\n}"
								},
								{
									"name": "Malformatted post resource request | Invalid external link | Invalid external link scheme | Failed to request %s | Failed to read %s | Failed to read mime from %s",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to save resource | Failed to create resource | Failed to create activity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Resource (Delete)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"resource",
										":resourceId"
									],
									"variable": [
										{
											"key": "resourceId",
											"value": "<integer>",
											"description": "(Required) Resource ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Resource deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "ID is not a number: %s",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Resource not found: %d",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find resource | Failed to delete resource",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Resource (Update)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"filename\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"resource",
										":resourceId"
									],
									"variable": [
										{
											"key": "resourceId",
											"value": "<integer>",
											"description": "(Required) Resource ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated resource",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filename\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"blob\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"createdTs\": \"<integer>\",\n  \"creatorID\": \"<integer>\",\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"internalPath\": \"<string>\",\n  \"memoID\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"updatedTs\": \"<integer>\"\n}"
								},
								{
									"name": "ID is not a number: %s | Malformatted patch resource request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filename\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filename\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Resource not found: %d",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filename\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find resource | Failed to patch resource",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filename\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/:resourceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												":resourceId"
											],
											"variable": [
												{
													"key": "resourceId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Resource (Create BLOB)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "(Required) File to upload",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/resource/blob",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"resource",
										"blob"
									]
								}
							},
							"response": [
								{
									"name": "Created resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) File to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/blob",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												"blob"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"blob\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"createdTs\": \"<integer>\",\n  \"creatorID\": \"<integer>\",\n  \"externalLink\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"internalPath\": \"<string>\",\n  \"memoID\": \"<integer>\",\n  \"size\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"updatedTs\": \"<integer>\"\n}"
								},
								{
									"name": "Upload file not found | File size exceeds allowed limit of %d MiB | Failed to parse upload data",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) File to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/blob",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												"blob"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) File to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/blob",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												"blob"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to get uploading file | Failed to open file | Failed to save resource | Failed to create resource | Failed to create activity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) File to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/resource/blob",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"resource",
												"blob"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "status",
					"item": [
						{
							"name": "System Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"status"
									]
								}
							},
							"response": [
								{
									"name": "System GetSystemStatus",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"additionalScript\": \"<string>\",\n  \"additionalStyle\": \"<string>\",\n  \"allowSignUp\": \"<boolean>\",\n  \"customizedProfile\": {\n    \"appearance\": \"<string>\",\n    \"description\": \"<string>\",\n    \"externalUrl\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"dbSize\": \"<integer>\",\n  \"disablePasswordLogin\": \"<boolean>\",\n  \"disablePublicMemos\": \"<boolean>\",\n  \"host\": {\n    \"avatarUrl\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"nickname\": \"<string>\",\n    \"role\": \"ADMIN\",\n    \"rowStatus\": \"NORMAL\",\n    \"updatedTs\": \"<integer>\",\n    \"username\": \"<string>\"\n  },\n  \"localStoragePath\": \"<string>\",\n  \"maxUploadSizeMiB\": \"<integer>\",\n  \"memoDisplayWithUpdatedTs\": \"<boolean>\",\n  \"profile\": {\n    \"mode\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"storageServiceId\": \"<integer>\"\n}"
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"status"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find host user | Failed to find system setting list | Failed to unmarshal system setting customized profile value",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"status"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "storage",
					"item": [
						{
							"name": "Storage (Get All)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"storage"
									]
								}
							},
							"response": [
								{
									"name": "List of storages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"config\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"config\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to convert storage",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Storage (Create)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"storage"
									]
								}
							},
							"response": [
								{
									"name": "Created storage",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"config\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"name": "Malformatted post storage request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to create storage | Failed to convert storage",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Storage (Delete)",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/storage/:storageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"storage",
										":storageId"
									],
									"variable": [
										{
											"key": "storageId",
											"value": "<integer>",
											"description": "(Required) Storage ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Storage deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "ID is not a number: %s | Storage service %d is using",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to find storage | Failed to unmarshal storage service id | Failed to delete storage",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Storage (Update)",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/storage/:storageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"storage",
										":storageId"
									],
									"variable": [
										{
											"key": "storageId",
											"value": "<integer>",
											"description": "(Required) Storage ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated resource",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"config\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"name": "ID is not a number: %s | Malformatted patch storage request | Malformatted post storage request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to patch storage | Failed to convert storage",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"s3Config\": {\n      \"accessKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"endPoint\": \"<string>\",\n      \"path\": \"<string>\",\n      \"region\": \"<string>\",\n      \"secretKey\": \"<string>\",\n      \"urlPrefix\": \"<string>\",\n      \"urlSuffix\": \"<string>\"\n    }\n  },\n  \"name\": \"<string>\",\n  \"type\": \"S3\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/storage/:storageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"storage",
												":storageId"
											],
											"variable": [
												{
													"key": "storageId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "system",
					"item": [
						{
							"name": "Settings",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/system/setting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"system",
										"setting"
									]
								}
							},
							"response": [
								{
									"name": "System setting list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"description\": \"<string>\",\n    \"name\": \"server-id\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"description\": \"<string>\",\n    \"name\": \"additional-style\",\n    \"value\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to find system setting list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Settings (Create)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"disable-public-memos\",\n  \"value\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/system/setting",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"system",
										"setting"
									]
								}
							},
							"response": [
								{
									"name": "Created system setting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"disable-public-memos\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"value\": \"<string>\"\n}"
								},
								{
									"name": "Malformatted post system setting request | invalid system setting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"disable-public-memos\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"disable-public-memos\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cannot disable passwords if no SSO identity provider is configured.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"disable-public-memos\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to upsert system setting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"disable-public-memos\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/setting",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"setting"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Vacuum DB",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/system/vacuum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"system",
										"vacuum"
									]
								}
							},
							"response": [
								{
									"name": "Database vacuumed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/vacuum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"vacuum"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "Missing user in session | Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/vacuum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"vacuum"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to ExecVacuum database",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/system/vacuum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"system",
												"vacuum"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "tag",
					"item": [
						{
							"name": "Tag (Get All)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tag"
									]
								}
							},
							"response": [
								{
									"name": "Tag list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								},
								{
									"name": "Missing user id to find tag",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find tag list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Tag (Create)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tag"
									]
								}
							},
							"response": [
								{
									"name": "Created tag name",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Malformatted post tag request | Tag name shouldn't be empty",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to upsert tag | Failed to create activity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Tag (Delete)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tag/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tag",
										"delete"
									]
								}
							},
							"response": [
								{
									"name": "Tag deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "Malformatted post tag request | Tag name shouldn't be empty",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag",
												"delete"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to delete tag name: %v",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Tag (Get Suggestion)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tag/suggestion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tag",
										"suggestion"
									]
								}
							},
							"response": [
								{
									"name": "Tag list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag/suggestion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag",
												"suggestion"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								},
								{
									"name": "Missing user session",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag/suggestion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag",
												"suggestion"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find memo list | Failed to find tag list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/tag/suggestion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"tag",
												"suggestion"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "User (Get All)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"response": [
								{
									"name": "User list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"avatarURL\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"nickname\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"role\": \"HOST\",\n    \"rowStatus\": \"NORMAL\",\n    \"updatedTs\": \"<integer>\",\n    \"username\": \"<string>\"\n  },\n  {\n    \"avatarURL\": \"<string>\",\n    \"createdTs\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"nickname\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"role\": \"HOST\",\n    \"rowStatus\": \"NORMAL\",\n    \"updatedTs\": \"<integer>\",\n    \"username\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Failed to fetch user list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User (Delete)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) User ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "User deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								},
								{
									"name": "ID is not a number: %s | Current session user not found with ID: %d",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized to delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to delete user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User (Get by ID)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) User ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested user",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "Malformatted user id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User (Create)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"ADMIN\",\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"response": [
								{
									"name": "Created user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"ADMIN\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "Malformatted post user request | Invalid user create format",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"ADMIN\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing auth session | Unauthorized to create user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"ADMIN\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Could not create host user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"ADMIN\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user by id | Failed to generate password hash | Failed to create user | Failed to create activity",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"role\": \"ADMIN\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Current User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"me"
									]
								}
							},
							"response": [
								{
									"name": "Current user",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "Missing auth session",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to find userSettingList",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"me"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User (Get by Username)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/name/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"name",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested user",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/name/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"name",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/name/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"name",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/name/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"name",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User (Update)",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"avatarUrl\": \"<string>\",\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"rowStatus\": \"ARCHIVED\",\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) User ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated user",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"avatarUrl\": \"<string>\",\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"rowStatus\": \"ARCHIVED\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"avatarURL\": \"<string>\",\n  \"createdTs\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"nickname\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"role\": \"USER\",\n  \"rowStatus\": \"NORMAL\",\n  \"updatedTs\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
								},
								{
									"name": "ID is not a number: %s | Current session user not found with ID: %d | Malformatted patch user request | Invalid update user request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"avatarUrl\": \"<string>\",\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"rowStatus\": \"ARCHIVED\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing user in session",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"avatarUrl\": \"<string>\",\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"rowStatus\": \"ARCHIVED\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized to update user",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"avatarUrl\": \"<string>\",\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"rowStatus\": \"ARCHIVED\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to find user | Failed to generate password hash | Failed to patch user | Failed to find userSettingList",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"avatarUrl\": \"<string>\",\n  \"email\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"password\": \"<string>\",\n  \"rowStatus\": \"ARCHIVED\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "rss",
					"item": [
						{
							"name": "RSS (Get User)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/u/:id/rss.xml",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"u",
										":id",
										"rss.xml"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) User ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "RSS",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/u/:id/rss.xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"u",
												":id",
												"rss.xml"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User id is not a number",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/u/:id/rss.xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"u",
												":id",
												"rss.xml"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to get system customized profile | Failed to find memo list | Failed to generate rss",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/u/:id/rss.xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"u",
												":id",
												"rss.xml"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "RSS (Get Explore)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/explore/rss.xml",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"explore",
										"rss.xml"
									]
								}
							},
							"response": [
								{
									"name": "RSS",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/explore/rss.xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"explore",
												"rss.xml"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to get system customized profile | Failed to find memo list | Failed to generate rss",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/explore/rss.xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"explore",
												"rss.xml"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "resource",
					"item": [
						{
							"name": "Resource (Get Image)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/o/get/GetImage?url=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"o",
										"get",
										"GetImage"
									],
									"query": [
										{
											"key": "url",
											"value": "<string>",
											"description": "(Required) Image url"
										}
									]
								}
							},
							"response": [
								{
									"name": "Image",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/o/get/GetImage?url=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"o",
												"get",
												"GetImage"
											],
											"query": [
												{
													"key": "url",
													"value": "<string>",
													"description": "(Required) Image url"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Missing GetImage url | Wrong url | Failed to get GetImage url: %s",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/o/get/GetImage?url=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"o",
												"get",
												"GetImage"
											],
											"query": [
												{
													"key": "url",
													"value": "<string>",
													"description": "(Required) Image url"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed to write GetImage blob",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/o/get/GetImage?url=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"o",
												"get",
												"GetImage"
											],
											"query": [
												{
													"key": "url",
													"value": "<string>",
													"description": "(Required) Image url"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			],
			"description": "v1 REST APIs for Memos"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		}
	]
}